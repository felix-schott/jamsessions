services:
  prod_db:
    image: postgis/postgis:16-3.4-alpine
    container_name: jamsessions_prod_db
    volumes: # create schema and roles on startup
      - ./init_db:/docker-entrypoint-initdb.d
      - $POSTGRES_DATA_DIR:/var/lib/postgresql/data # persist data on disk
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      POSTGRES_DB: $POSTGRES_DB
      READ_ONLY_PASSWORD: $READ_ONLY_PASSWORD
      READ_WRITE_PASSWORD: $READ_WRITE_PASSWORD
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U read_write -d ${POSTGRES_DB}'"]
      interval: 10s
      timeout: 3s
      retries: 3

  prod_api:
    image: ghcr.io/felix-schott/jamsessions-server:$RELEASE_TAG
    user: $PROD_UID:$PROD_GID
    container_name: jamsessions_prod_api
    volumes:
      - "$PWD/migrations:/app/migrations"
    environment:
      DB_URL: "host=prod_db port=5432 user=read_write password=${READ_WRITE_PASSWORD} dbname=${POSTGRES_DB} sslmode=disable"
      MIGRATIONS_DIRECTORY: /app/migrations
      MIGRATIONS_SUGGESTIONS: /app/migrations/suggestions
      SERVER_ADDRESS: 0.0.0.0:80
    depends_on:
      - prod_db
    healthcheck:
      test: ["CMD", "/app/bin/healthcheck", "http://localhost:80"]
      interval: 1s 
      timeout: 1s
      retries: 3

  prod_frontend:
    image: ghcr.io/felix-schott/jamsessions-frontend:$RELEASE_TAG
    container_name: jamsessions_prod_frontend
    volumes:
      - "node_modules_jamsessions_prod:/workspace/node_modules"
    restart: unless-stopped
    depends_on:
      - prod_api

  proxy:
    image: caddy:2-alpine
    hostname: proxy # prometheus config expects host to be called proxy
    container_name: jamsessions_prod_proxy
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - ./caddy-data-prod:/data
    environment:
      HOST: $WEBSITE_HOST
      FRONTEND_URL: prod_frontend:3000
      API_URL: prod_api:80
    ports:
      - "80:80"
      - "443:443"
      - "443:443/udp"
      - "127.0.0.1:2019:2019"
    depends_on:
      - prod_frontend
      - prod_api
    restart: unless-stopped

  prod_prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - jamsessions_prometheus_prod:/prometheus
    ports:
      - 127.0.0.1:9090:9090 # expose ui to localhost
    depends_on:
      - proxy

volumes:
  node_modules_jamsessions_prod: # build cache
  jamsessions_prometheus_prod: